#!/usr/bin/env bash

# jail helper for schroot
# it's needed as external script, in order to bridge sudo
# Note: assuming we can be called ourselves in jail at the same path

set -e
SCRIPT_ROOT_DIR="$(cd "$(dirname "$0")/../../" && pwd -P)"

. $SCRIPT_ROOT_DIR/lib/base.sh

needvar TARGET_ID HOST_JAIL_TYPE

command="$1"
shift || true

chroot_dir="$(get_builder_chroot_dir)"

[ `uname` == "SunOS" ] || die "can only run on SunOS (Illumos)"

case "$command" in
    exec)
        TARGET_ID="$TARGET_ID" sudo chroot "$chroot_dir" "$@" || die "failed jail command: $@"
    ;;
    install)
        sudo chroot "$chroot_dir" "$SCRIPT_ROOT_DIR/lib/os/$TARGET_OS/target-package-install" "$@"
    ;;
    register)
        mkdir -p "$chroot_dir/dev" "$chroot_dir/devices" "$chroot_dir/proc"
        # FIXME: need error handling
        mount -F lofs /dev "$chroot_dir/dev" || true
        mount -F lofs /devices "$chroot_dir/devices" || true
        mount -F lofs /proc "$chroot_dir/proc" || true
        cp /etc/resolv.conf   "$chroot_dir/etc"
        cp /etc/nsswitch.conf "$chroot_dir/etc"
    ;;
    syncme)
        sudo rsync --no-acls -r "$SCRIPT_ROOT_DIR/" "$chroot_dir/$SCRIPT_ROOT_DIR"
    ;;
    stop)
        # FIXME: need error handling
        umount "$chroot_dir/dev" || true
        umount "$chroot_dir/devices" || true
        umount "$chroot_dir/proc" || true
    ;;
    *)
        die "unknown command: $command -- $0 -- $@"
    ;;
esac
