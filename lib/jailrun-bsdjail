#!/usr/bin/env bash

# jail helper for schroot
# it's needed as external script, in order to bridge sudo
# Note: assuming we can be called ourselves in jail at the same path

set -e
SCRIPT_ROOT_DIR=$(dirname $(dirname $(realpath "$0")))

. $SCRIPT_ROOT_DIR/lib/base.sh

needvar TARGET_ID HOST_JAIL_TYPE

command="$1"
shift || true

builder_jail_name=$(get_builder_chroot_name)

selfcmd="$script_libdir/jailrun-$HOST_JAIL_TYPE"

if [ ! "$command" ]; then
    die "missing command"
fi

case "$command" in
    exec)
        log "jail exec: $@"
        TARGET_ID="$TARGET_ID" jexec "$builder_jail_name" "$@" || die "failed jail command: $@"
    ;;
    install)
        sudo jexec "$builder_jail_name" "$SCRIPT_ROOT_DIR/lib/$TARGET_OS/target-package-install" "$@"
    ;;
    register)
        chroot_dir="$1"
        sudo cp /etc/resolv.conf "$chroot_dir/etc"
        sudo mkdir -p /etc/jail.conf.d
        sudo tee "/etc/jail.conf.d/$builder_jail_name.conf" >/dev/null << __EOF__
## generated by xorg-testing ground - DO NOT EDIT
${builder_jail_name} {
  # STARTUP/LOGGING'
  exec.start = "/bin/sh /etc/rc";
  exec.stop = "/bin/sh /etc/rc.shutdown";
  exec.consolelog = "/var/log/jail_console_${builder_jail_name}.log";
  # PERMISSIONS
  allow.raw_sockets;
  # exec.clean;
  mount.devfs;

  # HOSTNAME/PATH
  host = "inherit";
  host.hostname = "${builder_jail_name}";
  path = "${chroot_dir}";

  # NETWORK
  ip4 = "inherit";
  # ip4.addr = 192.168.1.151;
  # interface = em0;
}
__EOF__
        if [ ! -f /etc/jail.conf ]; then
            log "creating new /etc/jail.conf"
            sudo tee "/etc/jail.conf" >/dev/null << __EOF__
## generated by xorg-testing ground
## it's only written once when not existing yet
## feel free to edit at will, but leave in including /etc/jail.conf.d/*
.include "/etc/jail.conf.d/*.conf";
__EOF__
        else
            log "/etc/jail.conf already existing. not touching it"
        fi
        sudo jail -cm "${builder_jail_name}"
    ;;
    syncme)
        sudo rsync -r "$SCRIPT_ROOT_DIR/" "$(get_builder_chroot_dir)/$SCRIPT_ROOT_DIR"
    ;;
    stop)
        sudo jail -r "${builder_jail_name}"
    ;;
    *)
        die "unknown command $0 $@"
    ;;
esac
